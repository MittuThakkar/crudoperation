{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert } from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.username]: evt.target.value\n      });\n    };\n\n    this.addRecord = () => {\n      alert('hello');\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }); // const url = \"http://localhost:8000/api/create\"\n\n      fetch(\"http://localhost:8000/api/create\", {\n        method: 'POST',\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            username: '',\n            password: '',\n            showAlert: true,\n            alertMessage: result.Response,\n            alertType: 'success'\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      showAlert: false,\n      alertMessage: '',\n      alertType: 'success'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this) : nul, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.props.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.props.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormControl","FormLabel","Button","FormGroup","Alert","App","Component","constructor","props","handleChange","evt","setState","target","username","value","addRecord","alert","myHeaders","Headers","append","body","JSON","stringify","state","password","fetch","method","headers","then","Response","json","result","console","log","showAlert","alertMessage","alertType","catch","err","render","nul"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert} from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n          username: \"\",\n          password: \"\",\n          showAlert: false,\n          alertMessage: '',\n          alertType: 'success'\n      };\n    }\n    handleChange = evt => {\n      this.setState({\n        [evt.target.username] : evt.target.value,\n      })\n    }\n\n    //Add Record\n\n    addRecord = () => {\n      alert('hello')\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\")\n\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n      // const url = \"http://localhost:8000/api/create\"\n      fetch(\"http://localhost:8000/api/create\",{\n        method: 'POST',\n        headers: myHeaders,\n        body: body\n      }).then((Response) => {\n        Response.json()\n        .then((result) => {\n          console.log(result);\n          this.setState({\n            username:'',\n            password:'',\n            showAlert: true,\n            alertMessage:result.Response,\n            alertType: 'success'\n          })\n        }).catch((err)=>{\n          console.log(err);\n        })\n      })\n    }\n    render(){\n      return (\n        <div>\n            <Container>\n            {\n              this.state.showAlert === true ? \n              <Alert\n                variant={this.state.alertType}\n                onClose={\n                  () => {\n                    this.setState({\n                      showAlert: false\n                    })\n                  }\n                }\n                dismissible\n              >\n                  <Alert.Heading>{this.state.alertMessage}</Alert.Heading>\n              </Alert> : nul\n            }\n              {/*insert form */}\n              <Row>\n                <Form>\n                  <FormGroup>\n                    <FormLabel>Username</FormLabel>\n                    <FormControl type= \"text\" name= \"username\" placeholder= \"Enetr Username\" value= {this.props.username} onChange={this.handleChange}></FormControl>\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl type= \"password\" name= \"password\" placeholder= \"Enetr Password\" value= {this.props.password} onChange={this.handleChange}></FormControl>\n                  </FormGroup>\n                  <Button onClick={this.addRecord}>Login</Button>\n                </Form>\n              </Row>\n            </Container>\n        </div>\n      )\n    }\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}