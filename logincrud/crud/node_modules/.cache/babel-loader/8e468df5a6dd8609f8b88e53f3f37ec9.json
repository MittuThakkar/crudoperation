{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert, Table } from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }); // const url = \"http://localhost:8000/api/create\"\n\n      fetch(\"http://localhost:8000/api/create\", {\n        method: 'POST',\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            username: '',\n            password: '',\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: 'success'\n          });\n          this.fetchAllRecords();\n        });\n      });\n    };\n\n    this.fetchAllRecords = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/view\", {\n        method: 'GET',\n        headers: myHeaders\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response\n          });\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.editRecord = id => {\n      fetch(\"http://localhost:8000/api/view/\" + id, {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          name: result.response[0].username,\n          location: result.response[0].password\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        id: this.state.id,\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/update/\", {\n        method: 'PUT',\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: 'success',\n            update: false,\n            id: '',\n            username: '',\n            password: ''\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.deleteRecord = id => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/delete/\" + id, {\n        method: 'DELETE'\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: 'danger'\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      records: [],\n      showAlert: false,\n      alertMessage: '',\n      alertType: 'success',\n      id: '',\n      update: false\n    };\n  }\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  } //Add Record\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.records.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 26\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 26\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 26\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => {\n                        this.editRecord(record.id);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      onClick: () => {\n                        this.deleteRecord(record.id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.props.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.props.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), this.state.update === true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.updateRecord,\n              children: \" Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormControl","FormLabel","Button","FormGroup","Alert","Table","App","Component","constructor","props","handleChange","evt","setState","target","name","value","addRecord","myHeaders","Headers","append","body","JSON","stringify","username","state","password","fetch","method","headers","then","Response","json","result","console","log","showAlert","alertMessage","response","alertType","fetchAllRecords","records","catch","err","editRecord","id","update","location","error","updateRecord","deleteRecord","componentWillMount","render","map","record"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,MAAtD,EAA8DC,SAA9D,EAAyEC,KAAzE,EAAgFC,KAAhF,QAA4F,iBAA5F;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAajBC,YAbiB,GAaDC,GAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE;AADlB,OAAd;AAGD,KAjBgB;;AAAA,SAwBjBC,SAxBiB,GAwBL,MAAM;AAChB,UAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADG;AAExBE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFG,OAAf,CAAX,CAJgB,CAQhB;;AACAC,MAAAA,KAAK,CAAC,kCAAD,EAAoC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAEX,SAF8B;AAGvCG,QAAAA,IAAI,EAAEA;AAHiC,OAApC,CAAL,CAIGS,IAJH,CAISC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,eAAKpB,QAAL,CAAc;AACZW,YAAAA,QAAQ,EAAC,EADG;AAEZE,YAAAA,QAAQ,EAAC,EAFG;AAGZU,YAAAA,SAAS,EAAE,IAHC;AAIZC,YAAAA,YAAY,EAACJ,MAAM,CAACK,QAJR;AAKZC,YAAAA,SAAS,EAAE;AALC,WAAd;AAOA,eAAKC,eAAL;AAED,SAZD;AAaD,OAlBD;AAmBD,KApDgB;;AAAA,SAuDjBA,eAvDiB,GAuDC,MAAM;AACtB,UAAItB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAO,MAAAA,KAAK,CAAC,gCAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,KAD6B;AAErCC,QAAAA,OAAO,EAAEX;AAF4B,OAAlC,CAAL,CAGGY,IAHH,CAGSC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKpB,QAAL,CAAc;AACZ4B,YAAAA,OAAO,EAAER,MAAM,CAACK;AADJ,WAAd;AAID,SAPD,EAOGI,KAPH,CAOUC,GAAD,IAAO;AACdT,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBQ,GAApB;AACD,SATD;AAUD,OAdD;AAeD,KAzEgB;;AAAA,SA4EjBC,UA5EiB,GA4EHC,EAAD,IAAQ;AACjBlB,MAAAA,KAAK,CAAC,oCAAoCkB,EAArC,EAAyC;AAC5CjB,QAAAA,MAAM,EAAE;AADoC,OAAzC,CAAL,CAGGE,IAHH,CAGSQ,QAAD,IAAcA,QAAQ,CAACN,IAAT,EAHtB,EAIGF,IAJH,CAISG,MAAD,IAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAKpB,QAAL,CAAc;AACZgC,UAAAA,EAAE,EAAEA,EADQ;AAEZC,UAAAA,MAAM,EAAE,IAFI;AAGZ/B,UAAAA,IAAI,EAAEkB,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBd,QAHb;AAIZuB,UAAAA,QAAQ,EAAEd,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBZ;AAJjB,SAAd;AAMD,OAZH,EAaGgB,KAbH,CAaUM,KAAD,IAAWd,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,KAArB,CAbpB;AAcD,KA3Fc;;AAAA,SA+FjBC,YA/FiB,GA+FF,MAAM;AACnB,UAAI/B,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACsB,QAAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWoB,EAAhB;AAAoBrB,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAzC;AAAmDE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAxE,OAAf,CAAX;AACAC,MAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,OAAO,EAAEX,SAF+B;AAGxCG,QAAAA,IAAI,EAAEA;AAHkC,OAArC,CAAL,CAIGS,IAJH,CAISC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKpB,QAAL,CAAc;AACXuB,YAAAA,SAAS,EAAE,IADA;AAEXC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,QAFV;AAGXC,YAAAA,SAAS,EAAE,SAHA;AAIXO,YAAAA,MAAM,EAAC,KAJI;AAKXD,YAAAA,EAAE,EAAC,EALQ;AAMXrB,YAAAA,QAAQ,EAAC,EANE;AAOXE,YAAAA,QAAQ,EAAE;AAPC,WAAd;AAUA,eAAKc,eAAL;AACD,SAdD,EAcGE,KAdH,CAcUC,GAAD,IAAO;AACdT,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBQ,GAApB;AACD,SAhBD;AAiBD,OAtBD;AAuBD,KA1HgB;;AAAA,SA8HjBO,YA9HiB,GA8HDL,EAAD,IAAQ;AACrB,UAAI3B,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAO,MAAAA,KAAK,CAAC,sCAAsCkB,EAAvC,EAA0C;AAC7CjB,QAAAA,MAAM,EAAE;AADqC,OAA1C,CAAL,CAGGE,IAHH,CAGSC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKpB,QAAL,CAAc;AACZuB,YAAAA,SAAS,EAAE,IADC;AAEZC,YAAAA,YAAY,EAACJ,MAAM,CAACK,QAFR;AAGZC,YAAAA,SAAS,EAAC;AAHE,WAAd;AAKA,eAAKC,eAAL;AACD,SATD,EASGE,KATH,CASUC,GAAD,IAAO;AACdT,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBQ,GAApB;AACD,SAXD;AAYD,OAhBD;AAiBD,KAlJgB;;AAEf,SAAKlB,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTe,MAAAA,OAAO,EAAE,EAHA;AAITL,MAAAA,SAAS,EAAE,KAJF;AAKTC,MAAAA,YAAY,EAAE,EALL;AAMTE,MAAAA,SAAS,EAAE,SANF;AAOTM,MAAAA,EAAE,EAAC,EAPM;AAQTC,MAAAA,MAAM,EAAE;AARC,KAAb;AAUD;;AAODK,EAAAA,kBAAkB,GAAE;AAClB,SAAKX,eAAL;AACD,GAtB6B,CAwB9B;;;AA4HAY,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,6BACI,QAAC,SAAD;AAAA,mBAEE,KAAK3B,KAAL,CAAWW,SAAX,KAAyB,IAAzB,gBACA,QAAC,KAAD;AACE,UAAA,OAAO,EAAE,KAAKX,KAAL,CAAWc,SADtB;AAEE,UAAA,OAAO,EACL,MAAM;AACJ,iBAAK1B,QAAL,CAAc;AACZuB,cAAAA,SAAS,EAAE;AADC,aAAd;AAGD,WAPL;AASE,UAAA,WAAW,MATb;AAAA,iCAWI,QAAC,KAAD,CAAO,OAAP;AAAA,sBAAgB,KAAKX,KAAL,CAAWY;AAA3B;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBADA,GAaW,IAfb,eAmBA,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,OAAO,MAAd;AAAe,YAAA,QAAQ,MAAvB;AAAwB,YAAA,KAAK,MAA7B;AAA8B,YAAA,IAAI,EAAC,IAAnC;AAAA,oCACE;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAI,kBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAA,wBAEG,KAAKZ,KAAL,CAAWgB,OAAX,CAAmBY,GAAnB,CAAwBC,MAAD,IAAU;AAC/B,oCAEE;AAAA,0CACE;AAAA,8BAAKA,MAAM,CAACT;AAAZ;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAKS,MAAM,CAAC9B;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,8BAAK8B,MAAM,CAAC5B;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAHF,eAKA;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,MAAhB;AAAuB,sBAAA,OAAO,EAAE,MAAM;AAAC,6BAAKkB,UAAL,CAAgBU,MAAM,CAACT,EAAvB;AAA2B,uBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BALA,eAQA;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,QAAhB;AAAyB,sBAAA,OAAO,EAAE,MAAM;AAAC,6BAAKK,YAAL,CAAkBI,MAAM,CAACT,EAAzB;AAA6B,uBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BARA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAgBD,eAjBD;AAFH;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBA,eAuDE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAE,MAAnB;AAA0B,gBAAA,IAAI,EAAE,UAAhC;AAA2C,gBAAA,WAAW,EAAE,gBAAxD;AAAyE,gBAAA,KAAK,EAAG,KAAKnC,KAAL,CAAWc,QAA5F;AAAsG,gBAAA,QAAQ,EAAE,KAAKb;AAArH;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAE,UAAnB;AAA8B,gBAAA,IAAI,EAAE,UAApC;AAA+C,gBAAA,WAAW,EAAE,gBAA5D;AAA6E,gBAAA,KAAK,EAAG,KAAKD,KAAL,CAAWgB,QAAhG;AAA0G,gBAAA,QAAQ,EAAE,KAAKf;AAAzH;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAUG,KAAKc,KAAL,CAAWqB,MAAX,KAAsB,IAAtB,gBAA6B,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA7B,gBAED,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKhC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AA4ED;;AAjO6B;;AAoOhC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport {Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert, Table} from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n          username: \"\",\n          password: \"\",\n          records: [],\n          showAlert: false,\n          alertMessage: '',\n          alertType: 'success',\n          id:'',\n          update: false\n      };\n    }\n    handleChange = (evt) => {\n      this.setState({\n        [evt.target.name]: evt.target.value,\n      });\n    };\n\n    componentWillMount(){\n      this.fetchAllRecords();\n    }\n\n    //Add Record\n    addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\")\n\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n      // const url = \"http://localhost:8000/api/create\"\n      fetch(\"http://localhost:8000/api/create\",{\n        method: 'POST',\n        headers: myHeaders,\n        body: body\n      }).then((Response) => {\n        Response.json()\n        .then((result) => {\n          console.log(result);\n          this.setState({\n            username:'',\n            password:'',\n            showAlert: true,\n            alertMessage:result.response,\n            alertType: 'success'\n          })\n          this.fetchAllRecords();\n          \n        })\n      })\n    }\n\n    //fetch all records from users table\n    fetchAllRecords = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\")\n      fetch(\"http://localhost:8000/api/view\",{\n        method: 'GET',\n        headers: myHeaders,\n      }).then((Response) => {\n        Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response,\n            \n          })\n        }).catch((err)=>{\n          console.log(\"error\",err);\n        })\n      }) \n    }\n\n    //view single data to record\n    editRecord = (id) => {\n        fetch(\"http://localhost:8000/api/view/\" + id, {\n          method: \"GET\",\n        })\n          .then((response) => response.json())\n          .then((result) => {\n            console.log(result);\n            this.setState({\n              id: id,\n              update: true,\n              name: result.response[0].username,\n              location: result.response[0].password,\n            });\n          })\n          .catch((error) => console.log(\"error\", error));\n      };\n    \n\n    //update a record\n    updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\")\n      var body = JSON.stringify({id: this.state.id, username: this.state.username, password: this.state.password})\n      fetch(\"http://localhost:8000/api/update/\",{\n        method: 'PUT',\n        headers: myHeaders,\n        body: body\n      }).then((Response) => {\n        Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n             showAlert: true,\n             alertMessage: result.response,\n             alertType: 'success',\n             update:false,\n             id:'',\n             username:'',\n             password: '',\n             \n          })\n          this.fetchAllRecords();\n        }).catch((err)=>{\n          console.log(\"error\",err);\n        })\n      })\n    }\n\n\n    //delete a record\n    deleteRecord = (id) => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\")\n      fetch(\"http://localhost:8000/api/delete/\" + id,{\n        method: 'DELETE',\n      \n      }).then((Response) => {\n        Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage:result.response,\n            alertType:'danger'\n          })\n          this.fetchAllRecords();\n        }).catch((err)=>{\n          console.log(\"error\",err);\n        })\n      })\n    }\n    render(){\n      return (\n        <div>\n            <Container>\n            {\n              this.state.showAlert === true ? \n              <Alert\n                variant={this.state.alertType}\n                onClose={\n                  () => {\n                    this.setState({\n                      showAlert: false\n                    })\n                  }\n                }\n                dismissible\n              >\n                  <Alert.Heading>{this.state.alertMessage}</Alert.Heading>\n              </Alert> : null\n            }\n\n            {/* All records */}\n            <Row>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Username</th>\n                    <th>Password</th>\n                    <th colSpan=\"2\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                 {\n                   this.state.records.map((record)=>{\n                     return(\n                       \n                       <tr>\n                         <td>{record.id}</td>\n                         <td>{record.username}</td>\n                         <td>{record.password}</td>\n                       \n                       <td>\n                         <Button variant=\"info\" onClick={() => {this.editRecord(record.id)}}>Edit</Button>\n                       </td>\n                       <td>\n                         <Button variant=\"danger\" onClick={() => {this.deleteRecord(record.id)}}>Delete</Button>\n                       </td>\n                       </tr>\n                      \n                     )\n                   })\n                 }\n                </tbody>\n              </Table>\n            </Row>\n\n              {/*insert form */}\n              <Row>\n                <Form>\n                  <FormGroup>\n                    <FormLabel>Username</FormLabel>\n                    <FormControl type= \"text\" name= \"username\" placeholder= \"Enetr Username\" value= {this.props.username} onChange={this.handleChange}></FormControl>\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl type= \"password\" name= \"password\" placeholder= \"Enetr Password\" value= {this.props.password} onChange={this.handleChange}></FormControl>\n                  </FormGroup>\n\n                  {this.state.update === true ? <Button onClick={this.updateRecord}> Update</Button> : \n\n                  <Button onClick={this.addRecord}>Login</Button>}\n                </Form>\n              </Row>\n            </Container>\n        </div>\n      )\n    }\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}