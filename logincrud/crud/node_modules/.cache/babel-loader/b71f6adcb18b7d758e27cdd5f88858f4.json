{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert, Table, Card } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.register = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.usernameReg,\n        password: this.state.passwordReg\n      });\n      fetch(\"http://localhost:8000/api/register\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            usernameReg: \"\",\n            passwordReg: \"\",\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\"\n          });\n          this.fetchAllRecords();\n        });\n      });\n    };\n\n    this.addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }); // if(!body.username ){\n      //   alert('Please Enter UserName and Password..!!')\n      //   return;\n      // }\n      // const url = \"http://localhost:8000/api/create\"\n\n      fetch(\"http://localhost:8000/api/create\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            username: \"\",\n            password: \"\",\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\"\n          });\n          this.fetchAllRecords();\n        });\n      });\n    };\n\n    this.fetchAllRecords = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/view\", {\n        method: \"GET\",\n        headers: myHeaders\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response\n          });\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.editRecord = id => {\n      fetch(\"http://localhost:8000/api/view/\" + id, {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        id: this.state.id,\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/update/\", {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\",\n            update: false,\n            id: \"\",\n            username: \"\",\n            password: \"\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.deleteRecord = id => {\n      fetch(\"http://localhost:8000/api/delete/\" + id, {\n        method: \"DELETE\"\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"danger\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameReg: \"\",\n      passwordReg: \"\",\n      records: [],\n      showAlert: false,\n      alertMessage: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false\n    };\n  }\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  } //register\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.records.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => {\n                        this.editRecord(record.id);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      onClick: () => {\n                        this.deleteRecord(record.id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Registartion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.state.usernameReg,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.state.passwordReg,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.register,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.state.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), this.state.update === true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.updateRecord,\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormControl","FormLabel","Button","FormGroup","Alert","Table","Card","App","Component","constructor","props","handleChange","evt","setState","target","name","value","register","myHeaders","Headers","append","body","JSON","stringify","username","state","usernameReg","password","passwordReg","fetch","method","headers","then","Response","json","result","console","log","showAlert","alertMessage","response","alertType","fetchAllRecords","addRecord","records","catch","err","editRecord","id","update","error","updateRecord","deleteRecord","componentWillMount","render","map","record"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,KARF,EASEC,KATF,EAUEC,IAVF,QAWO,iBAXP;;AAaA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeHC,GAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE;AADlB,OAAd;AAGD,KAnBkB;;AAAA,SA2BnBC,QA3BmB,GA2BR,MAAM;AACf,UAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,WADG;AAExBC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAFG,OAAf,CAAX;AAIAC,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAEb,SAFiC;AAG1CG,QAAAA,IAAI,EAAEA;AAHoC,OAAvC,CAAL,CAIGW,IAJH,CAISC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,MAAD,IAAY;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,eAAKtB,QAAL,CAAc;AACZa,YAAAA,WAAW,EAAC,EADA;AAEZE,YAAAA,WAAW,EAAC,EAFA;AAGZU,YAAAA,SAAS,EAAE,IAHC;AAIZC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,QAJT;AAKZC,YAAAA,SAAS,EAAE;AALC,WAAd;AAOA,eAAKC,eAAL;AACD,SAVD;AAWD,OAhBD;AAiBD,KApDkB;;AAAA,SAuDnBC,SAvDmB,GAuDP,MAAM;AAChB,UAAIzB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADG;AAExBG,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFG,OAAf,CAAX,CAJgB,CAQhB;AACA;AACA;AACA;AACA;;AACAE,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAEb,SAF+B;AAGxCG,QAAAA,IAAI,EAAEA;AAHkC,OAArC,CAAL,CAIGW,IAJH,CAISC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,MAAD,IAAY;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,eAAKtB,QAAL,CAAc;AACZW,YAAAA,QAAQ,EAAE,EADE;AAEZG,YAAAA,QAAQ,EAAE,EAFE;AAGZW,YAAAA,SAAS,EAAE,IAHC;AAIZC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,QAJT;AAKZC,YAAAA,SAAS,EAAE;AALC,WAAd;AAOA,eAAKC,eAAL;AACD,SAVD;AAWD,OAhBD;AAiBD,KArFkB;;AAAA,SAwFnBA,eAxFmB,GAwFD,MAAM;AACtB,UAAIxB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAS,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,KAD8B;AAEtCC,QAAAA,OAAO,EAAEb;AAF6B,OAAnC,CAAL,CAGGc,IAHH,CAGSC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACGF,IADH,CACSG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKtB,QAAL,CAAc;AACZ+B,YAAAA,OAAO,EAAET,MAAM,CAACK;AADJ,WAAd;AAGD,SANH,EAOGK,KAPH,CAOUC,GAAD,IAAS;AACdV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,GAArB;AACD,SATH;AAUD,OAdD;AAeD,KA1GkB;;AAAA,SA6GnBC,UA7GmB,GA6GLC,EAAD,IAAQ;AACnBnB,MAAAA,KAAK,CAAC,oCAAoCmB,EAArC,EAAyC;AAC5ClB,QAAAA,MAAM,EAAE;AADoC,OAAzC,CAAL,CAGGE,IAHH,CAGSQ,QAAD,IAAcA,QAAQ,CAACN,IAAT,EAHtB,EAIGF,IAJH,CAISG,MAAD,IAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAKtB,QAAL,CAAc;AACZmC,UAAAA,EAAE,EAAEA,EADQ;AAEZC,UAAAA,MAAM,EAAE,IAFI;AAGZzB,UAAAA,QAAQ,EAAEW,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBhB,QAHjB;AAIZG,UAAAA,QAAQ,EAAEQ,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBb;AAJjB,SAAd;AAMD,OAZH,EAaGkB,KAbH,CAaUK,KAAD,IAAWd,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,KAArB,CAbpB;AAcD,KA5HkB;;AAAA,SA+HnBC,YA/HmB,GA+HJ,MAAM;AACnB,UAAIjC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxByB,QAAAA,EAAE,EAAE,KAAKvB,KAAL,CAAWuB,EADS;AAExBxB,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAFG;AAGxBG,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAHG,OAAf,CAAX;AAKAE,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,QAAAA,MAAM,EAAE,KADiC;AAEzCC,QAAAA,OAAO,EAAEb,SAFgC;AAGzCG,QAAAA,IAAI,EAAEA;AAHmC,OAAtC,CAAL,CAIGW,IAJH,CAISC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACGF,IADH,CACSG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKtB,QAAL,CAAc;AACZyB,YAAAA,SAAS,EAAE,IADC;AAEZC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,QAFT;AAGZC,YAAAA,SAAS,EAAE,SAHC;AAIZQ,YAAAA,MAAM,EAAE,KAJI;AAKZD,YAAAA,EAAE,EAAE,EALQ;AAMZxB,YAAAA,QAAQ,EAAE,EANE;AAOZG,YAAAA,QAAQ,EAAE;AAPE,WAAd;AASA,eAAKe,eAAL;AACD,SAbH,EAcGG,KAdH,CAcUC,GAAD,IAAS;AACdV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,GAArB;AACD,SAhBH;AAiBD,OAtBD;AAuBD,KA9JkB;;AAAA,SAiKnBM,YAjKmB,GAiKHJ,EAAD,IAAQ;AACrBnB,MAAAA,KAAK,CAAC,sCAAsCmB,EAAvC,EAA2C;AAC9ClB,QAAAA,MAAM,EAAE;AADsC,OAA3C,CAAL,CAEGE,IAFH,CAESC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GACGF,IADH,CACSG,MAAD,IAAY;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,eAAKtB,QAAL,CAAc;AACZyB,YAAAA,SAAS,EAAE,IADC;AAEZC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,QAFT;AAGZC,YAAAA,SAAS,EAAE;AAHC,WAAd;AAKA,eAAKC,eAAL;AACD,SATH,EAUGG,KAVH,CAUUC,GAAD,IAAS;AACdV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,GAArB;AACD,SAZH;AAaD,OAhBD;AAiBD,KAnLkB;;AAEjB,SAAKrB,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,EADC;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXD,MAAAA,WAAW,EAAC,EAHD;AAIXE,MAAAA,WAAW,EAAC,EAJD;AAKXgB,MAAAA,OAAO,EAAE,EALE;AAMXN,MAAAA,SAAS,EAAE,KANA;AAOXC,MAAAA,YAAY,EAAE,EAPH;AAQXE,MAAAA,SAAS,EAAE,SARA;AASXO,MAAAA,EAAE,EAAE,EATO;AAUXC,MAAAA,MAAM,EAAE;AAVG,KAAb;AAYD;;AAODI,EAAAA,kBAAkB,GAAG;AACnB,SAAKX,eAAL;AACD,GAxB+B,CA0BhC;;;AA2JAY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA,mBACG,KAAK7B,KAAL,CAAWa,SAAX,KAAyB,IAAzB,gBACC,QAAC,KAAD;AACE,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWgB,SADtB;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAK5B,QAAL,CAAc;AACZyB,cAAAA,SAAS,EAAE;AADC,aAAd;AAGD,WANH;AAOE,UAAA,WAAW,MAPb;AAAA,iCASE,QAAC,KAAD,CAAO,OAAP;AAAA,sBAAgB,KAAKb,KAAL,CAAWc;AAA3B;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBADD,GAYG,IAbN,eAgBE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,OAAO,MAAd;AAAe,YAAA,QAAQ,MAAvB;AAAwB,YAAA,KAAK,MAA7B;AAA8B,YAAA,IAAI,EAAC,IAAnC;AAAA,oCACE;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAI,kBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAA,wBACG,KAAKd,KAAL,CAAWmB,OAAX,CAAmBW,GAAnB,CAAwBC,MAAD,IAAY;AAClC,oCACE;AAAA,0CACE;AAAA,8BAAKA,MAAM,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAKQ,MAAM,CAAChC;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,8BAAKgC,MAAM,CAAC7B;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAHF,eAKE;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,OAAO,EAAC,MADV;AAEE,sBAAA,OAAO,EAAE,MAAM;AACb,6BAAKoB,UAAL,CAAgBS,MAAM,CAACR,EAAvB;AACD,uBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BALF,eAeE;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,OAAO,EAAC,QADV;AAEE,sBAAA,OAAO,EAAE,MAAM;AACb,6BAAKI,YAAL,CAAkBI,MAAM,CAACR,EAAzB;AACD,uBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AA4BD,eA7BA;AADH;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA8DE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9DF,eA+DE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,WAAW,EAAC,gBAHd;AAIE,gBAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,WAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKf;AALjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,WAAW,EAAC,gBAHd;AAIE,gBAAA,KAAK,EAAE,KAAKc,KAAL,CAAWG,WAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKjB;AALjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,eAqBE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA/DF,eAyFE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzFF,eA0FE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,WAAW,EAAC,gBAHd;AAIE,gBAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWD,QAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKb;AALjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,SAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,WAAW,EAAC,gBAHd;AAIE,gBAAA,KAAK,EAAE,KAAKc,KAAL,CAAWE,QAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKhB;AALjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,EAqBG,KAAKc,KAAL,CAAWwB,MAAX,KAAsB,IAAtB,gBACC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4HD;;AAlT+B;;AAqTlC,eAAepC,GAAf","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Row,\n  Form,\n  FormControl,\n  FormLabel,\n  Button,\n  FormGroup,\n  Alert,\n  Table,\n  Card,\n} from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameReg:\"\",\n      passwordReg:\"\",\n      records: [],\n      showAlert: false,\n      alertMessage: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false,\n    };\n  }\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  }\n\n  //register\n\n  register = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var body = JSON.stringify({\n      username: this.state.usernameReg,\n      password: this.state.passwordReg,\n    });\n    fetch(\"http://localhost:8000/api/register\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: body,\n    }).then((Response) => {\n      Response.json().then((result) => {\n        console.log(result);\n        this.setState({\n          usernameReg:\"\",\n          passwordReg:\"\",\n          showAlert: true,\n          alertMessage: result.response,\n          alertType: \"success\",\n        });\n        this.fetchAllRecords();\n      });\n    });\n  };\n\n  //Add Record\n  addRecord = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var body = JSON.stringify({\n      username: this.state.username,\n      password: this.state.password,\n    });\n    // if(!body.username ){\n    //   alert('Please Enter UserName and Password..!!')\n    //   return;\n    // }\n    // const url = \"http://localhost:8000/api/create\"\n    fetch(\"http://localhost:8000/api/create\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: body,\n    }).then((Response) => {\n      Response.json().then((result) => {\n        console.log(result);\n        this.setState({\n          username: \"\",\n          password: \"\",\n          showAlert: true,\n          alertMessage: result.response,\n          alertType: \"success\",\n        });\n        this.fetchAllRecords();\n      });\n    });\n  };\n\n  //fetch all records from users table\n  fetchAllRecords = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    fetch(\"http://localhost:8000/api/view\", {\n      method: \"GET\",\n      headers: myHeaders,\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response,\n          });\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n\n  //view single data to record\n  editRecord = (id) => {\n    fetch(\"http://localhost:8000/api/view/\" + id, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password,\n        });\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  //update a record\n  updateRecord = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var body = JSON.stringify({\n      id: this.state.id,\n      username: this.state.username,\n      password: this.state.password,\n    });\n    fetch(\"http://localhost:8000/api/update/\", {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: body,\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\",\n            update: false,\n            id: \"\",\n            username: \"\",\n            password: \"\",\n          });\n          this.fetchAllRecords();\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n\n  //delete a record\n  deleteRecord = (id) => {\n    fetch(\"http://localhost:8000/api/delete/\" + id, {\n      method: \"DELETE\",\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"danger\",\n          });\n          this.fetchAllRecords();\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Container>\n          {this.state.showAlert === true ? (\n            <Alert\n              variant={this.state.alertType}\n              onClose={() => {\n                this.setState({\n                  showAlert: false,\n                });\n              }}\n              dismissible\n            >\n              <Alert.Heading>{this.state.alertMessage}</Alert.Heading>\n            </Alert>\n          ) : null}\n\n          {/* All records */}\n          <Row>\n            <Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Username</th>\n                  <th>Password</th>\n                  <th colSpan=\"2\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.records.map((record) => {\n                  return (\n                    <tr>\n                      <td>{record.id}</td>\n                      <td>{record.username}</td>\n                      <td>{record.password}</td>\n\n                      <td>\n                        <Button\n                          variant=\"info\"\n                          onClick={() => {\n                            this.editRecord(record.id);\n                          }}\n                        >\n                          Edit\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => {\n                            this.deleteRecord(record.id);\n                          }}\n                        >\n                          Delete\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Row>\n\n          {/*insert form */}\n          <Card.Title>Registartion</Card.Title>\n          <Row>\n            <Form>\n              <FormGroup>\n                <FormLabel>Username</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Enetr Username\"\n                  value={this.state.usernameReg}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enetr Password\"\n                  value={this.state.passwordReg}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              <Button onClick={this.register}>Register</Button>\n            </Form>\n          </Row>\n\n          <Card.Title>Login</Card.Title>\n          <Row>\n            <Form>\n              <FormGroup>\n                <FormLabel>Username</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Enetr Username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enetr Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              {this.state.update === true ? (\n                <Button onClick={this.updateRecord}>update</Button>\n              ) : (\n                <Button onClick={this.addRecord}>Login</Button>\n              )}\n            </Form>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}