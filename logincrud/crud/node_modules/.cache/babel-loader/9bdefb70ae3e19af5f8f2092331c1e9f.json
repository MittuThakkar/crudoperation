{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert, Table, Card } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }); // if(!body.username ){\n      //   alert('Please Enter UserName and Password..!!')\n      //   return;\n      // }\n      // const url = \"http://localhost:8000/api/create\"\n\n      fetch(\"http://localhost:8000/api/create\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            username: \"\",\n            password: \"\",\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\"\n          });\n          this.fetchAllRecords();\n        });\n      });\n    };\n\n    this.fetchAllRecords = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/view\", {\n        method: \"GET\",\n        headers: myHeaders\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response\n          });\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.editRecord = id => {\n      fetch(\"http://localhost:8000/api/view/\" + id, {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        id: this.state.id,\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/update/\", {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\",\n            update: false,\n            id: \"\",\n            username: \"\",\n            password: \"\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.deleteRecord = id => {\n      fetch(\"http://localhost:8000/api/delete/\" + id, {\n        method: \"DELETE\"\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"danger\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameReg: \"\",\n      passwordReg: \"\",\n      records: [],\n      showAlert: false,\n      alertMessage: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false\n    };\n  }\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  } //register\n  // register = () => {\n  //   var myHeaders = new Headers();\n  //   myHeaders.append(\"Content-Type\", \"application/json\");\n  //   var body = JSON.stringify({\n  //     username: this.state.usernameReg,\n  //     password: this.state.passwordReg,\n  //   });\n  //   fetch(\"http://localhost:8000/api/register\", {\n  //     method: \"POST\",\n  //     headers: myHeaders,\n  //     body: body,\n  //   }).then((Response) => {\n  //     Response.json().then((result) => {\n  //       console.log(result);\n  //       this.setState({\n  //         usernameReg:\"\",\n  //         passwordReg:\"\",\n  //         showAlert: true,\n  //         alertMessage: result.response,\n  //         alertType: \"success\",\n  //       });\n  //       this.fetchAllRecords();\n  //     });\n  //   });\n  // };\n  //Add Record\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.records.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => {\n                        this.editRecord(record.id);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      onClick: () => {\n                        this.deleteRecord(record.id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.state.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), this.state.update === true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.updateRecord,\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormControl","FormLabel","Button","FormGroup","Alert","Table","Card","App","Component","constructor","props","handleChange","evt","setState","target","name","value","addRecord","myHeaders","Headers","append","body","JSON","stringify","username","state","password","fetch","method","headers","then","Response","json","result","console","log","showAlert","alertMessage","response","alertType","fetchAllRecords","records","catch","err","editRecord","id","update","error","updateRecord","deleteRecord","usernameReg","passwordReg","componentWillMount","render","map","record"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Form,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  FormGroup,\r\n  Alert,\r\n  Table,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      usernameReg:\"\",\r\n      passwordReg:\"\",\r\n      records: [],\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n      alertType: \"success\",\r\n      id: \"\",\r\n      update: false,\r\n    };\r\n  }\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.fetchAllRecords();\r\n  }\r\n\r\n  //register\r\n\r\n  // register = () => {\r\n  //   var myHeaders = new Headers();\r\n  //   myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  //   var body = JSON.stringify({\r\n  //     username: this.state.usernameReg,\r\n  //     password: this.state.passwordReg,\r\n  //   });\r\n  //   fetch(\"http://localhost:8000/api/register\", {\r\n  //     method: \"POST\",\r\n  //     headers: myHeaders,\r\n  //     body: body,\r\n  //   }).then((Response) => {\r\n  //     Response.json().then((result) => {\r\n  //       console.log(result);\r\n  //       this.setState({\r\n  //         usernameReg:\"\",\r\n  //         passwordReg:\"\",\r\n  //         showAlert: true,\r\n  //         alertMessage: result.response,\r\n  //         alertType: \"success\",\r\n  //       });\r\n  //       this.fetchAllRecords();\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  //Add Record\r\n  addRecord = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var body = JSON.stringify({\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    });\r\n    // if(!body.username ){\r\n    //   alert('Please Enter UserName and Password..!!')\r\n    //   return;\r\n    // }\r\n    // const url = \"http://localhost:8000/api/create\"\r\n    fetch(\"http://localhost:8000/api/create\", {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: body,\r\n    }).then((Response) => {\r\n      Response.json().then((result) => {\r\n        console.log(result);\r\n        this.setState({\r\n          username: \"\",\r\n          password: \"\",\r\n          showAlert: true,\r\n          alertMessage: result.response,\r\n          alertType: \"success\",\r\n        });\r\n        this.fetchAllRecords();\r\n      });\r\n    });\r\n  };\r\n\r\n  //fetch all records from users table\r\n  fetchAllRecords = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    fetch(\"http://localhost:8000/api/view\", {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    }).then((Response) => {\r\n      Response.json()\r\n        .then((result) => {\r\n          console.log(\"result\", result);\r\n          this.setState({\r\n            records: result.response,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error\", err);\r\n        });\r\n    });\r\n  };\r\n\r\n  //view single data to record\r\n  editRecord = (id) => {\r\n    fetch(\"http://localhost:8000/api/view/\" + id, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState({\r\n          id: id,\r\n          update: true,\r\n          username: result.response[0].username,\r\n          password: result.response[0].password,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  //update a record\r\n  updateRecord = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var body = JSON.stringify({\r\n      id: this.state.id,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    });\r\n    fetch(\"http://localhost:8000/api/update/\", {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: body,\r\n    }).then((Response) => {\r\n      Response.json()\r\n        .then((result) => {\r\n          console.log(\"result\", result);\r\n          this.setState({\r\n            showAlert: true,\r\n            alertMessage: result.response,\r\n            alertType: \"success\",\r\n            update: false,\r\n            id: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n          });\r\n          this.fetchAllRecords();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error\", err);\r\n        });\r\n    });\r\n  };\r\n\r\n  //delete a record\r\n  deleteRecord = (id) => {\r\n    fetch(\"http://localhost:8000/api/delete/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then((Response) => {\r\n      Response.json()\r\n        .then((result) => {\r\n          console.log(\"result\", result);\r\n          this.setState({\r\n            showAlert: true,\r\n            alertMessage: result.response,\r\n            alertType: \"danger\",\r\n          });\r\n          this.fetchAllRecords();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error\", err);\r\n        });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.state.showAlert === true ? (\r\n            <Alert\r\n              variant={this.state.alertType}\r\n              onClose={() => {\r\n                this.setState({\r\n                  showAlert: false,\r\n                });\r\n              }}\r\n              dismissible\r\n            >\r\n              <Alert.Heading>{this.state.alertMessage}</Alert.Heading>\r\n            </Alert>\r\n          ) : null}\r\n\r\n          {/* All records */}\r\n          <Row>\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Username</th>\r\n                  <th>Password</th>\r\n                  <th colSpan=\"2\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.records.map((record) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{record.id}</td>\r\n                      <td>{record.username}</td>\r\n                      <td>{record.password}</td>\r\n\r\n                      <td>\r\n                        <Button\r\n                          variant=\"info\"\r\n                          onClick={() => {\r\n                            this.editRecord(record.id);\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          onClick={() => {\r\n                            this.deleteRecord(record.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n\r\n          {/*insert form */}\r\n          {/* <Card.Title>Registartion</Card.Title>\r\n          <Row>\r\n            <Form>\r\n              <FormGroup>\r\n                <FormLabel>Username</FormLabel>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enetr Username\"\r\n                  value={this.state.usernameReg}\r\n                  onChange={this.handleChange}\r\n                ></FormControl>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormLabel>Password</FormLabel>\r\n                <FormControl\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enetr Password\"\r\n                  value={this.state.passwordReg}\r\n                  onChange={this.handleChange}\r\n                ></FormControl>\r\n              </FormGroup>\r\n              <Button onClick={this.register}>Register</Button>\r\n            </Form>\r\n          </Row> */}\r\n\r\n          <Card.Title>Login</Card.Title>\r\n          <Row>\r\n            <Form>\r\n              <FormGroup>\r\n                <FormLabel>Username</FormLabel>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enetr Username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                ></FormControl>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormLabel>Password</FormLabel>\r\n                <FormControl\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enetr Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                ></FormControl>\r\n              </FormGroup>\r\n              {this.state.update === true ? (\r\n                <Button onClick={this.updateRecord}>update</Button>\r\n              ) : (\r\n                <Button onClick={this.addRecord}>Login</Button>\r\n              )}\r\n            </Form>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}