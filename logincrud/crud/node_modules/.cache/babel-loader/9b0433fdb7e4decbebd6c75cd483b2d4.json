{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Container, Row, Form, FormGroup, FormControl, FormLabel, Button, Alert, Table } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        username: evt.target.value,\n        password: evt.target.value\n      });\n    };\n\n    this.addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/create\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: body\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          username: \"\",\n          password: \"\",\n          showAlert: true,\n          alertMsg: result.response,\n          alertType: \"success\"\n        });\n      });\n    };\n\n    this.fetchAllRecords = () => {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/view\", {\n        method: \"GET\",\n        headers: headers\n      }).then(response => response.json()).then(result => {\n        console.log(\"result\", result);\n        this.setState({\n          records: result.response\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.editRecord = id => {\n      fetch(\"http://localhost:8000/api/view/\" + id, {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        id: this.state.id,\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/update\", {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: body\n      }).then(response => response.json()).then(result => {\n        this.setState({\n          showAlert: true,\n          alertMsg: result.response,\n          alertType: \"success\",\n          update: false,\n          id: \"\",\n          username: \"\",\n          password: \"\"\n        });\n        this.fetchAllRecords();\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.deleteRecord = id => {\n      fetch(\"http://localhost:8000/api/delete/\" + id, {\n        method: \"DELETE\"\n      }).then(response => response.json()).then(result => {\n        this.setState({\n          showAlert: true,\n          alertMsg: result.response,\n          alertType: \"danger\"\n        });\n        this.fetchAllRecords();\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      records: [],\n      showAlert: false,\n      alertMsg: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false\n    };\n  }\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  } // add a record\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.records.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => this.editRecord(record.id),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      onClick: () => this.deleteRecord(record.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 11\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Enter the username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                username: \"username\",\n                placeholder: \"Enter the username\",\n                onChange: this.handleChange,\n                value: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Enter the password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                username: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange,\n                placeholder: \"Enter the password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 8\n            }, this), this.state.update === true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.updateRecord,\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormGroup","FormControl","FormLabel","Button","Alert","Table","App","Component","constructor","props","handleChange","evt","setState","username","target","value","password","addRecord","myHeaders","Headers","append","body","JSON","stringify","state","fetch","method","headers","then","response","json","result","console","log","showAlert","alertMsg","alertType","fetchAllRecords","records","catch","error","editRecord","id","update","updateRecord","deleteRecord","componentWillMount","render","map","record"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container, Row, Form, FormGroup, FormControl, FormLabel, Button, Alert, Table } from \"react-bootstrap\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\",\n\t\t\trecords: [],\n\t\t\tshowAlert: false,\n\t\t\talertMsg: \"\",\n\t\t\talertType: \"success\",\n\t\t\tid: \"\",\n\t\t\tupdate: false,\n\t\t};\n\t}\n\n\thandleChange = (evt) => {\n\t\tthis.setState({\n      username: evt.target.value,\n      password: evt.target.value\n\t\t});\n\t};\n\n\tcomponentWillMount() {\n\t\tthis.fetchAllRecords();\n\t}\n\n\t// add a record\n\taddRecord = () => {\n\t\tvar myHeaders = new Headers();\n\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\t\tvar body = JSON.stringify({ username: this.state.username, password: this.state.password });\n\t\tfetch(\"http://localhost:8000/api/create\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: body,\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tconsole.log(result);\n\t\t\t\tthis.setState({\n\t\t\t\t\tusername: \"\",\n\t\t\t\t\tpassword: \"\",\n\t\t\t\t\tshowAlert: true,\n\t\t\t\t\talertMsg: result.response,\n\t\t\t\t\talertType: \"success\",\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\t// fetch All Records\n\tfetchAllRecords = () => {\n\t\tvar headers = new Headers();\n\t\theaders.append(\"Content-Type\", \"application/json\");\n\t\tfetch(\"http://localhost:8000/api/view\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: headers,\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tconsole.log(\"result\", result);\n\t\t\t\tthis.setState({\n\t\t\t\t\trecords: result.response,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t};\n\n\t// view single data to edit\n\teditRecord = (id) => {\n\t\tfetch(\"http://localhost:8000/api/view/\" + id, {\n\t\t\tmethod: \"GET\",\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tconsole.log(result);\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: id,\n\t\t\t\t\tupdate: true,\n\t\t\t\t\tusername: result.response[0].username,\n\t\t\t\t\tpassword: result.response[0].password,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t};\n\n\t// update record\n\tupdateRecord = () => {\n\t\tvar myHeaders = new Headers();\n\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\t\tvar body = JSON.stringify({ id: this.state.id, username: this.state.username, password: this.state.password });\n\t\tfetch(\"http://localhost:8000/api/update\", {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: body,\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tshowAlert: true,\n\t\t\t\t\talertMsg: result.response,\n\t\t\t\t\talertType: \"success\",\n\t\t\t\t\tupdate: false,\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tusername: \"\",\n\t\t\t\t\tpassword: \"\",\n\t\t\t\t});\n\t\t\t\tthis.fetchAllRecords();\n\t\t\t})\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t};\n\n\t// delete a record\n\tdeleteRecord = (id) => {\n\t\tfetch(\"http://localhost:8000/api/delete/\" + id, {\n\t\t\tmethod: \"DELETE\",\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tshowAlert: true,\n\t\t\t\t\talertMsg: result.response,\n\t\t\t\t\talertType: \"danger\",\n\t\t\t\t});\n\t\t\t\tthis.fetchAllRecords();\n\t\t\t})\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container>\n\t\t\t\t\t{this.state.showAlert === true ? (\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tvariant={this.state.alertType}\n\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tshowAlert: false,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdismissible\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Alert.Heading>{this.state.alertMsg}</Alert.Heading>\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/* All Records */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Table striped bordered hover size=\"sm\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>id</th>\n\t\t\t\t\t\t\t\t\t<th>username</th>\n\t\t\t\t\t\t\t\t\t<th>password</th>\n\t\t\t\t\t\t\t\t\t<th colSpan=\"2\">Actions</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{this.state.records.map((record) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>{record.id}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{record.username}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{record.password}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"info\" onClick={() => this.editRecord(record.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={() => this.deleteRecord(record.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t{/* Insert Form */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<FormLabel>Enter the username</FormLabel>\n\t\t\t\t\t\t\t\t<FormControl type=\"text\" username=\"username\" placeholder=\"Enter the username\" onChange={this.handleChange} value={this.state.username}></FormControl>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<FormLabel>Enter the password</FormLabel>\n\t\t\t\t\t\t\t\t<FormControl type=\"text\" username=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Enter the password\"></FormControl>\n\t\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t\t{this.state.update === true ? <Button onClick={this.updateRecord}>update</Button> : <Button onClick={this.addRecord}>Login</Button>}\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}