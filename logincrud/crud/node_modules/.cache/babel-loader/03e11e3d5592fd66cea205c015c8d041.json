{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\logincrud\\\\crud\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Container, Row, Form, FormControl, FormLabel, Button, FormGroup, Alert, Table } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.addRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }); // const url = \"http://localhost:8000/api/create\"\n\n      fetch(\"http://localhost:8000/api/create\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(result);\n          this.setState({\n            username: \"\",\n            password: \"\",\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\"\n          });\n          this.fetchAllRecords();\n        });\n      });\n    };\n\n    this.fetchAllRecords = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/api/view\", {\n        method: \"GET\",\n        headers: myHeaders\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response\n          });\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.editRecord = id => {\n      fetch(\"http://localhost:8000/api/view/\" + id, {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.updateRecord = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        id: this.state.id,\n        username: this.state.username,\n        password: this.state.password\n      });\n      fetch(\"http://localhost:8000/api/update/\", {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: body\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\",\n            update: false,\n            id: \"\",\n            username: \"\",\n            password: \"\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.deleteRecord = id => {\n      fetch(\"http://localhost:8000/api/delete/\" + id, {\n        method: \"DELETE\"\n      }).then(Response => {\n        Response.json().then(result => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"danger\"\n          });\n          this.fetchAllRecords();\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      records: [],\n      showAlert: false,\n      alertMessage: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false\n    };\n  }\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  } //Add Record\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [this.state.showAlert === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.alertType,\n          onClose: () => {\n            this.setState({\n              showAlert: false\n            });\n          },\n          dismissible: true,\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.records.map(record => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => {\n                        this.editRecord(record.id);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      onClick: () => {\n                        this.deleteRecord(record.id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Enetr Username\",\n                value: this.state.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enetr Password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), this.state.update === true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.updateRecord,\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.addRecord,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/logincrud/crud/src/App.js"],"names":["React","Container","Row","Form","FormControl","FormLabel","Button","FormGroup","Alert","Table","App","Component","constructor","props","handleChange","evt","setState","target","name","value","addRecord","myHeaders","Headers","append","body","JSON","stringify","username","state","password","fetch","method","headers","then","Response","json","result","console","log","showAlert","alertMessage","response","alertType","fetchAllRecords","records","catch","err","editRecord","id","update","error","updateRecord","deleteRecord","componentWillMount","render","map","record"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Row,\n  Form,\n  FormControl,\n  FormLabel,\n  Button,\n  FormGroup,\n  Alert,\n  Table,\n} from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      records: [],\n      showAlert: false,\n      alertMessage: \"\",\n      alertType: \"success\",\n      id: \"\",\n      update: false,\n    };\n  }\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  componentWillMount() {\n    this.fetchAllRecords();\n  }\n\n  //Add Record\n  addRecord = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var body = JSON.stringify({\n      username: this.state.username,\n      password: this.state.password,\n    });\n    \n    // const url = \"http://localhost:8000/api/create\"\n    fetch(\"http://localhost:8000/api/create\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: body,\n    }).then((Response) => {\n      Response.json().then((result) => {\n        console.log(result);\n        this.setState({\n          username: \"\",\n          password: \"\",\n          showAlert: true,\n          alertMessage: result.response,\n          alertType: \"success\",\n        });\n        this.fetchAllRecords();\n      });\n    });\n  };\n\n  //fetch all records from users table\n  fetchAllRecords = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    fetch(\"http://localhost:8000/api/view\", {\n      method: \"GET\",\n      headers: myHeaders,\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            records: result.response,\n          });\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n\n  //view single data to record\n  editRecord = (id) => {\n    fetch(\"http://localhost:8000/api/view/\" + id, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        this.setState({\n          id: id,\n          update: true,\n          username: result.response[0].username,\n          password: result.response[0].password,\n        });\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  //update a record\n  updateRecord = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var body = JSON.stringify({\n      id: this.state.id,\n      username: this.state.username,\n      password: this.state.password,\n    });\n    fetch(\"http://localhost:8000/api/update/\", {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: body,\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"success\",\n            update: false,\n            id: \"\",\n            username: \"\",\n            password: \"\",\n          });\n          this.fetchAllRecords();\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n\n  //delete a record\n  deleteRecord = (id) => {\n    fetch(\"http://localhost:8000/api/delete/\" + id, {\n      method: \"DELETE\",\n    }).then((Response) => {\n      Response.json()\n        .then((result) => {\n          console.log(\"result\", result);\n          this.setState({\n            showAlert: true,\n            alertMessage: result.response,\n            alertType: \"danger\",\n          });\n          this.fetchAllRecords();\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Container>\n          {this.state.showAlert === true ? (\n            <Alert\n              variant={this.state.alertType}\n              onClose={() => {\n                this.setState({\n                  showAlert: false,\n                });\n              }}\n              dismissible\n            >\n              <Alert.Heading>{this.state.alertMessage}</Alert.Heading>\n            </Alert>\n          ) : null}\n\n          {/* All records */}\n          <Row>\n            <Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Username</th>\n                  <th>Password</th>\n                  <th colSpan=\"2\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.records.map((record) => {\n                  return (\n                    <tr>\n                      <td>{record.id}</td>\n                      <td>{record.username}</td>\n                      <td>{record.password}</td>\n\n                      <td>\n                        <Button\n                          variant=\"info\"\n                          onClick={() => {\n                            this.editRecord(record.id);\n                          }}\n                        >\n                          Edit\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => {\n                            this.deleteRecord(record.id);\n                          }}\n                        >\n                          Delete\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Row>\n\n          {/*insert form */}\n          <Row>\n            <Form>\n              <FormGroup>\n                <FormLabel>Username</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Enetr Username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enetr Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                ></FormControl>\n              </FormGroup>\n              {this.state.update === true ? <Button onClick={this.updateRecord}>update</Button> : <Button onClick={this.addRecord}>Login</Button>}\n            </Form>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}